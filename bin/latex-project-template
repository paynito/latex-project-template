#!/usr/bin/env ruby

require_relative '../lib/latex_project_template'
require 'optparse'

help_message =<<HELP
Usage: #{File.basename(__FILE__)} project [template]
       #{File.basename(__FILE__)} --list
       #{File.basename(__FILE__)} --delete template
HELP

options = {
  :mode => :create
}

begin
  OptionParser.new(help_message) do |opt|
    opt.on("--list", "List templates.") do |v|
      options[:mode] = :list
    end
    opt.on("--delete", "Delete template.") do |v|
      options[:mode] = :delete
    end
    opt.on("--init", "Initialize configuration directory.") do |v|
      options[:mode] = :init
    end
    opt.parse!(ARGV)
  end
rescue OptionParser::InvalidOption
  $stderr.print <<MES
error: Invalid Option
#{help_message}
MES
  exit(2)
rescue OptionParser::InvalidArgument
  $stderr.print <<MES
error: Invalid Argument
#{help_message}
MES
  exit(2)
end

case options[:mode]
when :init
  LaTeXProjectTemplate::Configuration.new.init_config
when :list
  LaTeXProjectTemplate::Configuration.new.list_template.each do |template|
    $stdout.puts template
  end
when :delete
  if template = ARGV[0]
    LaTeXProjectTemplate::Configuration.new.delete_template(template)
  else
    $stderr.puts "Please set template name."
    $stderr.puts help_message
    exit(1)
  end
when :create
  dir = ARGV[0]
  template = ARGV[1] || 'default'
  if dir
    LaTeXProjectTemplate.new(dir, template).create
  else
    exit(1)
  end
end
